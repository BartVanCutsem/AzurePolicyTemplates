apiVersion: templates.gatekeeper.sh/v1beta1
kind: ConstraintTemplate
metadata:
  name: k8sazurev1podenforcelabelvalues
spec:
  crd:
    spec:
      names:
        kind: K8sAzureV1PodEnforceLabelvalues
      validation:
        # Schema for the `parameters` field
        openAPIV3Schema:
          properties:
            labels:
              type: array
              items:
                type: string
  targets:
    - target: admission.k8s.gatekeeper.sh
      rego: |
        package k8sazurev1podenforcelabelvalues

        # Checks if `labels`  has an  
        contains(labels, elem) {
          labels[_] = elem
        }

        violation[{"msg": msg, "details": {"missing_labels": missing}}] {
          required := {label | label := input.parameters.labels[_]}
          provided := {label | input.review.object.metadata.labels[label]}
          missing := required - provided
          count(missing) > 0
          msg := sprintf("you must provide labels: %v", [missing])
        }

        ### ENV Label values
        violation[{"msg": msg}] {
          required := input.parameters.requiredLabelValuesEnv
          provided := input.review.object.metadata.labels.env
          not contains(required, provided)
          msg := sprintf("Env label required one of the following labels. The current label `%v` has to be one of the following values;  %v",  [provided, required])
        }


        ### Team Label values 
        violation[{"msg": msg}] {
          required := input.parameters.requiredLabelValuesTeam
          provided := input.review.object.metadata.labels.team
          not contains(required, provided)
          msg := sprintf("Team label required one of the following labels. The current label `%v` has to be one of the following values;  %v",  [provided , required])
        }